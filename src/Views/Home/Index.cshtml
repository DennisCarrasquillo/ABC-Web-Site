@model BLS_Inventory.Models.MailViewModel
@{
    ViewBag.Title = "Home Page";
}

<div>
    <font size="3">
       <br/><br/><br/><br/>
        <p>A creative Inventory Management System designed specifically for the parts distributor.</p>
        <p>This Next Generation Inventory Management System is an Integrated Suite of Tools that will Enhance and Simplify your Parts Management Process.</p>
        <font size="4"><center>
    <b><p>@Html.ActionLink("Sign Up", "RegisterView", "Clients") to try BLS Inventory Management for <b><font color="red">FREE!</font></b> using our quickstart demo database.</p></b>
</center></font>
        <p style="color: #ffffff; background-color: #004892">&nbsp;&nbsp;BLS Inventory supports:</p>
            <ul>
                <li>
                    Fully customizable user access. User access to the various system components (ex. Purchasing, Sales, etc.) can be restricted at the detail level.
                    You can set each user's individual priveleges based on your company's workflow model.
                </li>
                <li>
                    The system administrator can create and assign special databases for testing new versions of BLS Inventory, or creating a demo platform without impacting the
                    live, production, system.
                </li>
                <li>
                    Licensing at the user, site, or enterprise level.
                </li>
                <li>
                    Display help information anytime by pressing F1.<br />
                    <br />
                </li>
            </ul>
<p style="color: #ffffff; background-color: #004892">&nbsp;&nbsp;Inventory</p>
   
    <table>
        <tr>
            <td>             
                <ul>
                    <li>Manage In-house inventory, supplier consignments, and/or supplier's excess inventory.</li>
                    <li>Inventory search by number, SKU, NSN, internal number, category, description, etc.</li>
                    <li>Categorize your inventory by two levels of category.</li>
                    <li>Store alternate and internal item numbers.</li>
                    <li>Store SKU and NSN numbers.</li>
                    <li>View stock levels at a glance.</li>
                    <li>Set quantity sales pricing levels.</li>
                    <li>Store and display item images.</li>
                    <li>View and edit quantities by source and type.</li>
                </ul>
            </td>
            <td>
                <img src="~/Images/Maintain Inventory.png" />
            </td>
        </tr>
    </table>
        <br />
        <b>Bulk Import</b> vendor inventory. <br />
        <table>
            <tr>
                <td>
                    <img src="~/Images/Import-small.jpg" /><br />
                </td>
                <td>
                    <ul>
                        <li>Import inventory by type (ex. Consignment, excess).<br /></li>
                        <li>Store multiple custom import templates by vendor.<br /></li>
                        <li>Export import errors for further analysis in Excel.<br /></li>
                        <li>System generateable lot numbers.<br /></li>
                        <li>Create item categories on-the-fly during import.<br /></li>
                        <li>Preview import data.<br /></li>
                        <li>Undo entire imports.<br /></li>
                    </ul>
                </td>
            </tr>
        </table>
        <br />

        <b>Bulk Export</b> inventory.<br />
       
        <table>
            <tr>
                 <td>
                    <ul>
                        <li>Create customized inventory files to send to other suppliers or public databases like IC Source.</li>
                        <li>Export by vendor.</li>
                        <li>Export by Lot Number.</li>
                        <li>Export by Inventory Type (ex. Inhouse, consignment, etc.)</li>
                        <li>Choose the fields you want exported.</li>
                        <li>Perform multiple export operations simultaneously.</li>
                        <li>Export to an Excel readable .csv format.</li>
                        <li>Create a consignee or excess inventory file.</li>
                        <li>Email the exported file.</li>
                        <li>FTP the exported file directly to a remote server.</li>
                    </ul>
                </td>
                <td>
                    <img src="~/Images/Export.jpg" /><br />
                </td>
            </tr>
        </table>
        <br />
<p style="color: #ffffff; background-color: #004892">&nbsp;&nbsp;Purchasing</p>
                
                <table>
                    <tr>
                        <td>
                            <img src="~/Images/PurchaseOrder-small.jpg" /><br />
                        </td>
                        <td>
                            <ul>
                                <li>Maintain full vendor information including multiple locations and multiple contacts.<br /></li>
                                <li>Gather multiple purchase requests for a vendor in a cart.<br /></li>
                                <li>Process receiving partial shipments.<br /></li>
                                <li>Request price quotes from vendors.<br /></li>
                                <li>Track all purchases and quote requests.<br /></li>
                                <li>Process returns of undesirable items.<br /></li>
                                <li>Specify separate ship to and bill to locations.<br /></li>
                                <li>View purchase history trends.</li>
                                <li>Export PO details for import into your Accounting System.</li>
                            </ul>
                        </td>
                    </tr>
                </table>
                <br />
<p style="color: #ffffff; background-color: #004892">&nbsp;&nbsp;Sales</p>
                
                <table>
                    <tr>
                        <td>
                            <img src="~/Images/SalesOrder-small.jpg" /><br />
                        </td>
                        <td>
                            <ul>
                                <li>Maintain detail customer information including multiple locations and multiple contacts.<br /></li>
                                <li>View detail customer purchase and quote history.<br /></li>
                                <li>Assign customers to sales staff.<br /></li>
                                <li>Maintain a customer cart.<br /></li>
                                <li>Cart items are held in reserve to avoid overselling.</li>
                                <li>Ability to sell out-of-stock items.</li>
                                <li>Drop-ship items directly from Vendor.</li>
                                <li>View sales history trends.</li>
                                <li>Export Sales Order details for import into you ACcounting System.</li>
                            </ul>
                        </td>
                    </tr>
                </table>
                <br />



        <p>For more information call Customer Service:<img src="~/Images/inquiry.jpg" /> or @Html.ActionLink("Contact Us", "MailView", "Mail") via email.</p>
        </font>
</div>
<div id="topRight">
   <b> Contact Us</b>
    <br/>
    <img src="~/Images/inquiry.jpg" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <table border="1" style="background-color:rgba(255, 255, 255, 1);">
        <tr>
            <td>Company</td>
            <td>@Html.EditorFor(model => model.BusinessName, new { htmlAttributes = new { @class = "form-control" } })</td>
        </tr>
        <tr>
            <td>Name</td>
            <td>@Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control" } })</td>
        </tr>
        <tr>
            <td>
                Email
            </td>
            <td>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        </td>
    </tr>
    <tr>
        <td>Phone</td>
        <td>
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
    </td>
</tr>
       <tr>
            <td>Name</td>
            <td>@Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control" } })</td>
        </tr>
        <tr>
            <td colspan="2">@Html.TextBoxFor(m => m.Msg, new { @readonly = "readonly" })</td>
        </tr>


</table>
    <input type="submit" value="Send Message" class="btn btn-default" /><br/>
  
}
</div>